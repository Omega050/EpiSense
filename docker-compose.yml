services:
  # MongoDB - Backend Storage
  mongodb:
    image: mongo:7.0
    container_name: episense-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: episense_db
    volumes:
      - mongodb_data:/data/db
    networks:
      - episense-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ScyllaDB - Shared Storage for FHIR Server & FHIR Generator
  scylladb:
    image: scylladb/scylla:latest
    container_name: episense-scylladb
    restart: unless-stopped
    ports:
      - "9042:9042"
    volumes:
      - scylla_data:/var/lib/scylla
      - ./docker-init/init-scylla.cql:/init-scylla.cql:ro
    command: --smp 2 --memory 2048M
    networks:
      - episense-network
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ScyllaDB Schema Initializer - Unified for both FHIR Server and FHIR Generator
  scylladb-init:
    image: cassandra:latest
    container_name: episense-scylladb-init
    depends_on:
      scylladb:
        condition: service_healthy
    volumes:
      - ./docker-init/init-scylla.cql:/init-scylla.cql:ro
    entrypoint: >
      sh -c "
        echo 'Waiting for ScyllaDB to be fully ready...' &&
        sleep 10 &&
        echo 'Executing unified schema for FHIR Server and FHIR Generator...' &&
        cqlsh scylladb -f /init-scylla.cql &&
        echo 'Unified schema executed successfully!'
      "
    networks:
      - episense-network
    restart: "no"

  postgres:
    image: postgres:16-alpine
    container_name: episense-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: episense_analysis
      POSTGRES_USER: episense
      POSTGRES_PASSWORD: episense_dev_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker-init/init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql
    networks:
      - episense-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U episense -d episense_analysis"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FHIR Server - Servidor de ingest√£o FHIR
  fhir-server:
    build:
      context: ./fhir-server
      dockerfile: Dockerfile
    image: fhir-server:latest
    container_name: episense-fhir-server
    restart: unless-stopped
    ports:
      - "8081:8081"
    env_file:
      - ./fhir-server/.env
    depends_on:
      scylladb-init:
        condition: service_completed_successfully
    networks:
      - episense-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  # FHIR Generator - Gerador de dados FHIR
  fhir-generator:
    build:
      context: ./fhir-generator
      dockerfile: Dockerfile
    image: fhir-generator:latest
    container_name: episense-fhir-generator
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      fhir-server:
        condition: service_healthy
    networks:
      - episense-network
    healthcheck:
      test:
        ["CMD", "curl", "-f", "http://localhost:8080/api/v1/hemograma/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

volumes:
  mongodb_data:
    driver: local
  postgres_data:
    driver: local
  scylla_data:
    driver: local

networks:
  episense-network:
    driver: bridge
