// <auto-generated />
using System;
using System.Collections.Generic;
using EpiSense.Analysis.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EpiSense.Analysis.Migrations
{
    [DbContext(typeof(AnalysisDbContext))]
    partial class AnalysisDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EpiSense.Analysis.Domain.Entities.DailyCaseAggregation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("flag");

                    b.Property<string>("MunicipioIBGE")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)")
                        .HasColumnName("municipio_ibge");

                    b.Property<int>("TotalCasos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("total_casos");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("Id");

                    b.HasIndex("MunicipioIBGE", "Data", "Flag")
                        .IsUnique()
                        .HasDatabaseName("IX_daily_case_aggregations_lookup");

                    b.ToTable("daily_case_aggregations", (string)null);
                });

            modelBuilder.Entity("EpiSense.Analysis.Domain.Entities.ObservationSummary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CodigoMunicipioIBGE")
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)")
                        .HasColumnName("codigo_municipio_ibge");

                    b.Property<DateTime>("DataColeta")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_coleta");

                    b.Property<List<string>>("Flags")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("flags");

                    b.Property<Dictionary<string, decimal>>("LabValues")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("lab_values");

                    b.Property<string>("ObservationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("observation_id");

                    b.HasKey("Id");

                    b.HasIndex("CodigoMunicipioIBGE");

                    b.HasIndex("DataColeta");

                    b.HasIndex("Flags");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Flags"), "gin");

                    b.ToTable("observation_summaries", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
